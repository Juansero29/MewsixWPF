<controls:MetroWindow x:Class="Mewsix.MainWindow"    
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:converters="clr-namespace:Mewsix.Converters"
        mc:Ignorable="d"
        Title="Mewsix" Height="450" Width="750"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        GlowBrush="{DynamicResource AccentColorBrush}"
        BorderThickness="1"
        TextElement.FontWeight="Medium"
        TextElement.FontSize="14"
        FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding WindowClosingCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Window.Resources>
        <ResourceDictionary>

            <converters:TabSizeConverter x:Key="tabSizeConverter" />
            <converters:StringArrayToStringConverter x:Key="StringArrayToStringConverter"></converters:StringArrayToStringConverter>

            <Style TargetType="{x:Type TabItem}">
                <Setter Property="Width">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource tabSizeConverter}">
                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type TabControl}}" />
                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type TabControl}}" Path="ActualWidth" />
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style BasedOn="{StaticResource {x:Type TextBlock}}"
                x:Key="TextBlockStyle" TargetType="TextBlock">
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>


            <Style BasedOn="{StaticResource {x:Type TextBox}}"
                x:Key="TextBoxStyle" TargetType="TextBox">
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <EventSetter Event="KeyDown" Handler="TextBox_KeyDown"/>
            </Style>

            <Style BasedOn="{StaticResource {x:Type ComboBoxItem}}"
                x:Key="ComboBoxItemStyle" TargetType="ComboBoxItem">
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>

            <Style BasedOn="{StaticResource {x:Type ComboBox}}"
                x:Key="ComboBoxStyle" TargetType="ComboBox">
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>


            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.CheckBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ListBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.RadioButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBlock.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
            </ResourceDictionary.MergedDictionaries>




        </ResourceDictionary>
    </Window.Resources>
    <Grid>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="4*" MinWidth="210"/>
            <ColumnDefinition Width="6*"/>
        </Grid.ColumnDefinitions>


        
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="0.5*" MinHeight="50"/>
                <RowDefinition Height="9.5*"/>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="12">
                <materialDesign:PackIcon VerticalAlignment="Center" Kind="Magnify" />
                <TextBox Margin="10, 0, 0, 0" MinWidth="250" HorizontalAlignment="Stretch" Text="{Binding SearchCriteria, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></TextBox>
            </StackPanel>

            <ListView Grid.Row="1" AllowDrop="True" Drop="ListView_Drop" DragDrop.GiveFeedback="ListView_GiveFeedback"  SelectedIndex="{Binding SelectedIndex, Mode=TwoWay}" SelectedItem="{Binding SelectedTrack, Mode=TwoWay}" Grid.Column="0" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                  ItemsSource="{Binding Tracks}" MinWidth="200">
                <ListView.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Remove">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <i:InvokeCommandAction Command="{Binding RemoveItemClickCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </MenuItem>
                    </ContextMenu>
                </ListView.ContextMenu>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Border>
                            <Grid Margin="4">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="8*"/>
                                </Grid.ColumnDefinitions>

                                <Viewbox Grid.Column="0"  MaxWidth="80">
                                    <Image Source="{Binding AlbumUri}" Stretch="UniformToFill"/>
                                </Viewbox>

                                <Grid Margin="4" Grid.Column="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="5*"/>
                                        <RowDefinition Height="5*"/>
                                    </Grid.RowDefinitions>

                                    <TextBlock VerticalAlignment="Bottom" Text="{Binding Title}" Margin="0,0,0,4" FontSize="20"/>
                                    <TextBlock VerticalAlignment="Top" Text="{Binding Artists, Converter={StaticResource StringArrayToStringConverter}}" FontSize="15" Grid.Row="1" Margin="0,0,0,4" FontWeight="Bold" Foreground="#757575"/>
                                </Grid>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

            <materialDesign:PopupBox Style="{StaticResource MaterialDesignMultiFloatingActionAccentPopupBox}"
                                     MaxHeight="48"
                                     MaxWidth="48"
                                     HorizontalAlignment="Right"
                                     VerticalAlignment="Bottom"
                                     Margin="16"
                                     Grid.Row="1">
                <StackPanel>
                    <Button ToolTip="Add a music file" Opacity="0.8" Command="{Binding SingleTrackAddCommand}">
                        <materialDesign:PackIcon Kind="MusicNote" />
                    </Button>

                    <Button ToolTip="Add a folder" Opacity="0.8" Command="{Binding SingleFolderAddCommand}">
                        <materialDesign:PackIcon Kind="Folder" />
                    </Button>
                </StackPanel>
            </materialDesign:PopupBox>
        </Grid>


        <!--   RIGHT PART OF THE SCREEN  -->



        <DockPanel Grid.Column="1"  >

            <Grid DockPanel.Dock="Bottom" Height="48" Background="#BBDEFB">
                <Grid Margin="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="5*"/>
                        <ColumnDefinition Width="2*"/>


                    </Grid.ColumnDefinitions>

                    <Button Margin="6" Grid.Column="0" Command="{Binding PreviousTrackButtonClickCommand}">
                        <materialDesign:PackIcon Kind="SkipPrevious" Height="Auto" Width="Auto"/>
                    </Button>
                    <Button Margin="6" Grid.Column="1" Command="{Binding PlayPauseTrackButtonClickCommand}">
                        <materialDesign:PackIcon Kind="PlayPause" Height="Auto" Width="Auto" />
                    </Button>
                    <Button Margin="6" Grid.Column="2" Command="{Binding NextTrackButtonClickCommand}">
                        <materialDesign:PackIcon Kind="SkipNext" Height="Auto" Width="Auto" />
                    </Button>
                    <TextBlock Grid.Column="3" TextAlignment="Center"  VerticalAlignment="Center" Text="{Binding MPlayer.CurrentTime}"/>


                    <Slider TickFrequency="1000" Margin="4" Grid.Column="4" Minimum="0" Maximum="1000" MinWidth="80" VerticalAlignment="Center" Value="{Binding MPlayer.SliderValue}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown">
                                <i:InvokeCommandAction Command="{Binding PreviewMouseDownCommand}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="PreviewMouseUp">
                                <i:InvokeCommandAction Command="{Binding PreviewMouseUpCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Slider>



                    <TextBlock Grid.Column="5" VerticalAlignment="Center" Text="{Binding MPlayer.TotalTime}"/>
                </Grid>
            </Grid>

            <TabControl>

                <TabItem IsSelected="True" Header="Info">
                    <Grid Margin="16">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="200*"/>
                            <RowDefinition Height="5*"/>
                            <RowDefinition Height="150*"/>
                            <RowDefinition Height="5*"/>
                            <RowDefinition Height="100*"/>
                            <RowDefinition Height="100*"/>
                            <RowDefinition Height="100*"/>
                            <RowDefinition Height="100*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="3*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>


                        <Image Grid.ColumnSpan="3" Source="{Binding SelectedTrack.AlbumUri}" Stretch="UniformToFill" Opacity="0.42">
                            <Image.Effect>
                                <BlurEffect Radius="15"/>
                            </Image.Effect>
                        </Image>


                        <Grid Grid.Row="0" Grid.ColumnSpan="3" Margin="8,8,8,8" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="7*"/>
                                <ColumnDefinition Width="3*"/>
                            </Grid.ColumnDefinitions>


                            <Grid Grid.Column="0" VerticalAlignment="Center" Margin="40,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="5*"/>
                                    <RowDefinition Height="5*"/>
                                </Grid.RowDefinitions>


                                <Viewbox HorizontalAlignment="Left" Grid.Row="0" MaxHeight="50">
                                    <TextBox TextWrapping="Wrap"  KeyDown="TextBox_KeyDown" Text="{Binding SelectedTrack.Title, TargetNullValue={x:Static sys:String.Empty}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontSize="20" />
                                </Viewbox>


                                <Viewbox HorizontalAlignment="Left" Grid.Row="1" MaxHeight="50">
                                    <StackPanel Orientation="Horizontal">
                                        <Label VerticalAlignment="Bottom" HorizontalContentAlignment="Center" Foreground="#757575" FontSize="10">by</Label>
                                        <TextBox  TextWrapping="Wrap" KeyDown="TextBox_KeyDown" Text="{Binding SelectedTrack.Artists, TargetNullValue={x:Static sys:String.Empty},  Converter={StaticResource StringArrayToStringConverter},Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontSize="15" Foreground="#757575"/>
                                    </StackPanel>

                                </Viewbox>

                            </Grid>

                            <Viewbox Grid.Column="3">
                                <Image Source="{Binding SelectedTrack.AlbumUri}" Stretch="UniformToFill"/>
                            </Viewbox>

                        </Grid>

                        <Rectangle Visibility="Hidden" Grid.Row="1" Grid.ColumnSpan="3" Height="1" Fill="{DynamicResource AccentColorBrush3}" />

                        <ScrollViewer  Grid.Row="2" Grid.ColumnSpan="3" HorizontalScrollBarVisibility="Disabled">
                            <TextBlock Padding="20" TextWrapping="Wrap" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Justify" Text="{Binding SelectedTrack.Summary}" FontSize="17" FontStretch="ExtraExpanded"/>
                        </ScrollViewer>

                        <Rectangle  Grid.Row="3" Grid.ColumnSpan="3" Height="1" Fill="{DynamicResource AccentColorBrush3}" />


                        <StackPanel HorizontalAlignment="Center" Grid.Row="4" Grid.Column="1" Orientation="Horizontal">
                            <TextBlock Style="{StaticResource TextBlockStyle}" Text="Album : "/>
                            <TextBox Style="{StaticResource TextBoxStyle}" Text="{Binding SelectedTrack.Album, TargetNullValue={x:Static sys:String.Empty}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>

                        <StackPanel HorizontalAlignment="Center" Grid.Row="5" Grid.Column="1" Orientation="Horizontal">
                            <TextBlock Style="{StaticResource TextBlockStyle}" Text="Year : "/>
                            <TextBox Style="{StaticResource TextBoxStyle}" Text="{Binding SelectedTrack.Year, TargetNullValue={x:Static sys:String.Empty}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>

                        <StackPanel HorizontalAlignment="Center" Grid.Row="6" Grid.Column="1" Orientation="Horizontal">
                            <TextBlock Style="{StaticResource TextBlockStyle}" Text="Genre : "/>
                            <ComboBox Style="{StaticResource ComboBoxStyle}">
                                <ComboBoxItem Style="{StaticResource ComboBoxItemStyle}" IsSelected="True" Content="{Binding SelectedTrack.Genre, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </ComboBox>
                        </StackPanel>

                        <StackPanel HorizontalAlignment="Center" Grid.Row="7" Grid.Column="1" Orientation="Horizontal">
                            <TextBlock Style="{StaticResource TextBlockStyle}" Text="Comments : "/>
                            <TextBox Style="{StaticResource TextBoxStyle}" Text="{Binding SelectedTrack.Comment, TargetNullValue={x:Static sys:String.Empty}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>

                    </Grid>
                </TabItem>

                <TabItem Header="Lyrics">
                    <ScrollViewer>
                        <TextBlock Grid.Column="1" TextWrapping="Wrap" Text="{Binding SelectedTrack.Lyrics}" TextAlignment="Center" Margin="16" FontSize="25"/>
                    </ScrollViewer>


                </TabItem>

            </TabControl>

        </DockPanel>

    </Grid>


</controls:MetroWindow>
